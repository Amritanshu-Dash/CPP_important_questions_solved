//Operator Overloading

#include<iostream>

using namespace std;

class Complex
{
public:
    int a,b;
    void input(string s)
    {
        int v1=0;
        int i=0;
        while(s[i]!='+')
        {
            v1=v1*10+s[i]-'0';
            i++;
        }
        while(s[i]==' ' || s[i]=='+'||s[i]=='i')
        {
            i++;
        }
        int v2=0;
        while(i<s.length())
        {
            v2=v2*10+s[i]-'0';
            i++;
        }
        a=v1;
        b=v2;
    }
};

//Overload operators + and << for the class complex
//+ should add two complex numbers as (a+ib) + (c+id) = (a+c) + i(b+d)
//<< should print a complex number in the format "a+ib"
/*Complex operator+(Complex &first, Complex &second){
    return Complex(first.a+second.a , first.b+second.b);
}

ostream &operator<<(ostream &os, Complex &co){
    os << co.a <<"+i"<<co.b<<endl;
    return os;
}*/

Complex operator+(Complex A,Complex B){
    Complex C;
    C.a = A.a + B.a ;
    C.b = A.b + B.b;
    return C;
}
     
ostream &operator<<(ostream&s , Complex B){
         s<<B.a<<"+i"<<B.b;
         return s;
}
int main()
{
    Complex x,y;
    string s1,s2;
    cin>>s1;
    cin>>s2;
    x.input(s1);
    y.input(s2);
    Complex z=x+y;
    cout<<z<<endl;
}
